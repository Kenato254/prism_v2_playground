/* tslint:disable */
/* eslint-disable */
/**
 * Prism Agent OpenAPI specification
 * OpenAPI specification for Decentralized Identifiers (DID) Operations
 *
 * The version of the OpenAPI document: 0.41.0
 * Contact: atala-coredid@iohk.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PresentationStatus } from './PresentationStatus';
import {
    PresentationStatusFromJSON,
    PresentationStatusFromJSONTyped,
    PresentationStatusToJSON,
} from './PresentationStatus';

/**
 * 
 * @export
 * @interface PresentationStatusPage
 */
export interface PresentationStatusPage {
    /**
     * The reference to the connection collection itself.
     * @type {string}
     * @memberof PresentationStatusPage
     */
    self: string;
    /**
     * The type of object returned. In this case a `Collection`.
     * @type {string}
     * @memberof PresentationStatusPage
     */
    kind: string;
    /**
     * Page number within the context of paginated response.
     * @type {string}
     * @memberof PresentationStatusPage
     */
    pageOf: string;
    /**
     * URL of the next page (if available)
     * @type {string}
     * @memberof PresentationStatusPage
     */
    next?: string;
    /**
     * URL of the previous page (if available)
     * @type {string}
     * @memberof PresentationStatusPage
     */
    previous?: string;
    /**
     * 
     * @type {Array<PresentationStatus>}
     * @memberof PresentationStatusPage
     */
    contents: Array<PresentationStatus>;
}

/**
 * Check if a given object implements the PresentationStatusPage interface.
 */
export function instanceOfPresentationStatusPage(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "self" in value;
    isInstance = isInstance && "kind" in value;
    isInstance = isInstance && "pageOf" in value;
    isInstance = isInstance && "contents" in value;

    return isInstance;
}

export function PresentationStatusPageFromJSON(json: any): PresentationStatusPage {
    return PresentationStatusPageFromJSONTyped(json, false);
}

export function PresentationStatusPageFromJSONTyped(json: any, ignoreDiscriminator: boolean): PresentationStatusPage {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'self': json['self'],
        'kind': json['kind'],
        'pageOf': json['pageOf'],
        'next': !exists(json, 'next') ? undefined : json['next'],
        'previous': !exists(json, 'previous') ? undefined : json['previous'],
        'contents': ((json['contents'] as Array<any>).map(PresentationStatusFromJSON)),
    };
}

export function PresentationStatusPageToJSON(value?: PresentationStatusPage | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'self': value.self,
        'kind': value.kind,
        'pageOf': value.pageOf,
        'next': value.next,
        'previous': value.previous,
        'contents': ((value.contents as Array<any>).map(PresentationStatusToJSON)),
    };
}

