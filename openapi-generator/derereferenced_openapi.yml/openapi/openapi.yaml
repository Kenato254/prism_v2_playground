openapi: 3.0.1
info:
  contact:
    email: atala-coredid@iohk.io
    name: Core DID
  description: OpenAPI specification for Decentralized Identifiers (DID) Operations
  title: Prism Agent OpenAPI specification
  version: 0.41.0
servers:
- url: https://k8s-dev.atalaprism.io/prism-agent/
- url: http://localhost/prism-agent
security:
- ApiKeyAuth: []
tags:
- description: DID REST API
  name: DID
- description: DID Registrar REST API (Prism Agent managed DID)
  name: DID Registrar
- description: Schema Registry REST API
  name: Schema Registry
- description: Verification Policies REST API
  name: Verification
- description: Present Proof REST API
  name: Present Proof
- description: "Manage [DIDComm v2](https://identity.foundation/didcomm-messaging/spec/v2.0/)\
    \ connections"
  name: Connections Management
paths:
  /dids/{didRef}:
    get:
      description: Resolve Prism DID to a DID document.
      operationId: getDid
      parameters:
      - description: DID reference.
        example: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
        in: path
        name: didRef
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DIDResponse'
          description: The DID resource
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: There is no DID existing for the 'didRef'.
      summary: Resolve Prism DID
      tags:
      - DID
  /did-registrar/dids:
    get:
      description: |
        List all DIDs stored in Prism Agent's wallet.
        Return a paginated items ordered by created timestamp.
        If the `limit` parameter is not set, it defaults to 100 items per page.
      operationId: listManagedDid
      parameters:
      - in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedDIDPage'
          description: List Prism Agent managed DIDs
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Error.
      summary: List all DIDs stored in Prism Agent's wallet
      tags:
      - DID Registrar
    post:
      description: |
        Create unpublished DID and store it inside Prism Agent's wallet. The private keys of the DID is
        managed by Prism Agent. The DID can later be published to the VDR using publications endpoint.
      operationId: createManagedDid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateManagedDidRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateManagedDIDResponse'
          description: Created unpublished DID.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The DID creation failed.
      summary: Create unpublished DID and store it in Prism Agent's wallet
      tags:
      - DID Registrar
  /did-registrar/dids/{didRef}:
    get:
      description: Get DID stored in Prism Agent's wallet
      operationId: getManagedDid
      parameters:
      - description: DID reference.
        example: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
        in: path
        name: didRef
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedDID'
          description: Get Prism Agent managed DID
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: There is no DID existing for the 'didRef'.
      summary: Get DID stored in Prism Agent's wallet
      tags:
      - DID Registrar
  /did-registrar/dids/{didRef}/publications:
    post:
      description: |
        Publish the DID stored in Prism Agent's wallet to the VDR.
      operationId: publishManagedDid
      parameters:
      - description: DID reference.
        example: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
        in: path
        name: didRef
        required: true
        schema:
          type: string
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DIDOperationResponse'
          description: Publishing DID to the VDR.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The DID publication failed.
      summary: Publish the DID stored in Prism Agent's wallet to the VDR
      tags:
      - DID Registrar
  /did-registrar/dids/{didRef}/updates:
    post:
      description: |
        Update DID in Prism Agent's wallet and post update operation to the VDR.
        This endpoint updates the DID document from the last confirmed operation.
        Submitting multiple update operations without waiting for confirmation will result in
        some operations being rejected as only one operation is allowed to be appended to the last confirmed operation.
      operationId: updateManagedDid
      parameters:
      - description: DID reference.
        example: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
        in: path
        name: didRef
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateManagedDIDRequest'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DIDOperationResponse'
          description: Publishing DID to the VDR.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The DID update failed.
      summary: Update DID in Prism Agent's wallet and post update operation to the
        VDR
      tags:
      - DID Registrar
  /did-registrar/dids/{didRef}/deactivations:
    post:
      description: |
        Deactivate DID in Prism Agent's wallet and post deactivate operation to the VDR.
      operationId: deactivateManagedDid
      parameters:
      - description: DID reference.
        example: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
        in: path
        name: didRef
        required: true
        schema:
          type: string
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DIDOperationResponse'
          description: Publishing DID to Blockchain.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The DID deactivation failed.
      summary: Deactivate DID in Prism Agent's wallet and post deactivate operation
        to the VDR
      tags:
      - DID Registrar
  /schema-registry/schemas:
    get:
      description: "Lookup schemas by `author`, `name`, `tags` parameters and control\
        \ the pagination by `offset` and `limit` parameters "
      operationId: lookupSchemasByQuery
      parameters:
      - in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      - explode: true
        in: query
        name: author
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: tags
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: order
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifiableCredentialSchemaPage'
          description: ""
        "400":
          content:
            text/plain:
              schema:
                type: string
          description: "Invalid value for: query parameter author, Invalid value for:\
            \ query parameter name, Invalid value for: query parameter tags, Invalid\
            \ value for: query parameter offset, Invalid value for: query parameter\
            \ limit, Invalid value for: query parameter order"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: ""
      summary: Lookup schemas by indexed fields
      tags:
      - Schema Registry
    post:
      description: Publish the new schema with attributes to the schema registry on
        behalf of Cloud Agent. Schema will be signed by the keys of Cloud Agent and
        issued by the DID that corresponds to it
      operationId: createSchema
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerificationCredentialSchemaInput'
        description: Create schema input object with the metadata and attributes
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifiableCredentialSchema'
          description: ""
        "400":
          content:
            text/plain:
              schema:
                type: string
          description: "Invalid value for: body"
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: ""
      summary: Publish new schema to the schema registry
      tags:
      - Schema Registry
  /schema-registry/schemas/{id}:
    get:
      description: Fetch the schema by the unique identifier. Verifiable Credential
        Schema in json format is returned.
      operationId: getSchemaById
      parameters:
      - description: Get the schema by id
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifiableCredentialSchema'
          description: ""
        "400":
          content:
            text/plain:
              schema:
                type: string
          description: "Invalid value for: path parameter id"
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ""
      summary: Fetch the schema from the registry by id
      tags:
      - Schema Registry
  /verification/policies:
    get:
      description: "Lookup verification policies by `name`, and control the pagination\
        \ by `offset` and `limit` parameters"
      operationId: lookupVerificationPoliciesByQuery
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: order
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationPolicyPage'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: ""
      summary: Lookup verification policies by query
      tags:
      - Verification
    post:
      description: Create the new verification policy
      operationId: createVerificationPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerificationPolicyInput'
        description: Create verification policy object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationPolicy'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: ""
      summary: Create the new verification policy
      tags:
      - Verification
  /verification/policies/{id}:
    delete:
      description: Delete the verification policy by id
      operationId: deleteVerificationPolicyById
      parameters:
      - description: Delete the verification policy by id
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Nonce of the previous VerificationPolicy
        explode: true
        in: query
        name: nonce
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: ""
      summary: Delete the verification policy by id
      tags:
      - Verification
    get:
      description: Get the verification policy by id
      operationId: getVerificationPolicyById
      parameters:
      - description: Get the verification policy by id
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationPolicy'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: ""
      summary: Fetch the verification policy by id
      tags:
      - Verification
    put:
      description: Update the verification policy entry
      operationId: updateVerificationPolicy
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Nonce of the previous VerificationPolicy
        explode: true
        in: query
        name: nonce
        required: true
        schema:
          format: int32
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerificationPolicyInput'
        description: Update verification policy object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationPolicy'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: ""
      summary: Update the verification policy object by id
      tags:
      - Verification
  /issue-credentials/credential-offers:
    post:
      operationId: createCredentialOffer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIssueCredentialRecordRequest'
        description: The credential offer object.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCredentialRecord'
          description: "The issue credential record was created successfully, and\
            \ is returned in the response body."
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The issue credential record creation failed. More information
            on the error can be found in the response body.
      summary: "As a credential issuer, create a new credential offer to be sent to\
        \ a holder."
      tags:
      - Issue Credentials Protocol
  /issue-credentials/records:
    get:
      operationId: getCredentialRecords
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCredentialRecordCollection'
          description: The list of issue credential records.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Retrieving the issue credential records failed for an unexpected
            reason. More information on the error can be found in the response body.
      summary: Gets the list of issue credential records.
      tags:
      - Issue Credentials Protocol
  /issue-credentials/records/{recordId}:
    get:
      operationId: getCredentialRecord
      parameters:
      - description: The unique identifier of the issue credential record.
        in: path
        name: recordId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCredentialRecord'
          description: The issue credential record.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: There is no issue credential record matching the given identifier.
      summary: Gets an existing issue credential record by its unique identifier.
      tags:
      - Issue Credentials Protocol
  /issue-credentials/records/{recordId}/accept-offer:
    post:
      description: Accepts a credential offer received from a VC issuer and sends
        back a credential request.
      operationId: acceptCredentialOffer
      parameters:
      - description: The unique identifier of the issue credential record.
        in: path
        name: recordId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCredentialRecord'
          description: The issue credential offer was successfully accepted.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: There is no issue credential record matching the given identifier.
      summary: "As a holder, accepts a credential offer received from an issuer."
      tags:
      - Issue Credentials Protocol
  /issue-credentials/records/{recordId}/issue-credential:
    post:
      operationId: issueCredential
      parameters:
      - description: The unique identifier of the issue credential record.
        in: path
        name: recordId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCredentialRecord'
          description: The request was processed successfully and the credential will
            be issued asynchronously.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: There is no issue credential record matching the given identifier.
      summary: "As an issuer, issues the verifiable credential related to the specified\
        \ record."
      tags:
      - Issue Credentials Protocol
  /present-proof/presentations:
    get:
      operationId: getAllPresentation
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PresentationStatus'
                type: array
          description: The list of proof presentation records.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Retrieving the proof presentation records failed for an unexpected
            reason. More information on the error can be found in the response body.
      summary: Gets the list of proof presentation records.
      tags:
      - Present Proof
    post:
      operationId: requestPresentation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPresentationInput'
        description: The present proof creation request.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestPresentationOutput'
          description: The proof presentation request was created successfully and
            will be sent asynchronously to the Prover.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Creating the proof presentation request failed for an unexpected
            reason. More information on the error can be found in the response body.
      summary: "As a Verifier, create a new proof presentation request and send it\
        \ to the Prover."
      tags:
      - Present Proof
  /present-proof/presentations/{recordId}:
    get:
      operationId: getPresentation
      parameters:
      - description: The unique identifier of the proof presentation record.
        in: path
        name: recordId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PresentationStatus'
          description: The proof presentation record.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: There is no presentation record matching the given identifier.
            More information on the error can be found in the response body.
      summary: Gets an existing proof presentation record by its unique identifier.
        More information on the error can be found in the response body.
      tags:
      - Present Proof
    patch:
      operationId: updatePresentation
      parameters:
      - description: The unique identifier of the proof presentation record.
        in: path
        name: recordId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPresentationAction'
        description: The action to perform on the proof presentation record.
        required: true
      responses:
        "200":
          description: The proof presentation record was successfully updated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: There is no presentation record matching the given identifier.
      summary: "Updates the proof presentation record matching the unique identifier,\
        \ with the specific action to perform."
      tags:
      - Present Proof
  /connections:
    get:
      operationId: getConnections
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionCollection'
          description: The list of connection records.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Retrieving the connection records failed for an unexpected
            reason. More information on the error can be found in the response body.
      summary: Gets the list of connection records.
      tags:
      - Connections Management
    post:
      description: |
        Generates a new Peer DID and creates an [Out of Band 2.0](https://identity.foundation/didcomm-messaging/spec/v2.0/#out-of-band-messages) invitation.
        It returns a new connection record in `InvitationGenerated` state.
        The request body may contain a `label` that can be used as a human readable alias for the connection, for example `{'label': "Bob"}`
      operationId: createConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConnectionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
          description: "The connection record was created successfully, and is returned\
            \ in the response body."
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The connection record creation failed. More information on
            the error can be found in the response body.
      summary: Creates a new connection record and returns an Out of Band invitation.
      tags:
      - Connections Management
  /connections/{connectionId}:
    get:
      operationId: getConnection
      parameters:
      - description: The unique identifier of the connection record.
        in: path
        name: connectionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
          description: The connection record.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: There is no connection record matching the given identifier.
      summary: Gets an existing connection record by its unique identifier.
      tags:
      - Connections Management
  /connection-invitations:
    post:
      description: |
        Accepts an [Out of Band 2.0](https://identity.foundation/didcomm-messaging/spec/v2.0/#out-of-band-messages) invitation, generates a new Peer DID,
        and submits a Connection Request to the inviter.
        It returns a connection object in `ConnectionRequestPending` state, until the Connection Request is eventually sent to the inviter by the prism-agent's background process. The connection object state will then automatically move to `ConnectionRequestSent`.
      operationId: acceptConnectionInvitation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptConnectionInvitationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
          description: The invitation was successfully accepted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Storing the connection invitation failed for an unexpected
            reason. More information on the error can be found in the response body.
      summary: Accepts an Out of Band invitation.
      tags:
      - Connections Management
components:
  parameters:
    didRefInPath:
      description: DID reference.
      example: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
      in: path
      name: didRef
      required: true
      schema:
        type: string
    offset:
      in: query
      name: offset
      required: false
      schema:
        format: int32
        type: integer
    limit:
      in: query
      name: limit
      required: false
      schema:
        format: int32
        type: integer
    issueCredentialRecordIdInPath:
      description: The unique identifier of the issue credential record.
      in: path
      name: recordId
      required: true
      schema:
        format: uuid
        type: string
    presentationRecordIdInPath:
      description: The unique identifier of the proof presentation record.
      in: path
      name: recordId
      required: true
      schema:
        format: uuid
        type: string
    connectionId:
      description: The unique identifier of the connection record.
      in: path
      name: connectionId
      required: true
      schema:
        type: string
  schemas:
    DIDResponse:
      example:
        metadata:
          canonicalId: canonicalId
          deactivated: true
        did:
          assertionMethod:
          - type: EMBEDDED
            verificationMethod:
              controller: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
              publicKeyJwk:
                kty: EC
                crv: secp256k1
                x: 38M1FDts7Oea7urmseiugGW7tWc3mLpJh6rKe7xINZ8
                "y": nDQW6XZ7b_u2Sy9slofYLlG03sOEoug3I0aAPQ0exs4
              id: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff#key-1
              type: EcdsaSecp256k1VerificationKey2019
            uri: did:prism:c7bd808e8e135236d7262ecf5e639b8f9d22bd886f59a4e6c909486846ca8319#key-1
          - type: EMBEDDED
            verificationMethod:
              controller: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
              publicKeyJwk:
                kty: EC
                crv: secp256k1
                x: 38M1FDts7Oea7urmseiugGW7tWc3mLpJh6rKe7xINZ8
                "y": nDQW6XZ7b_u2Sy9slofYLlG03sOEoug3I0aAPQ0exs4
              id: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff#key-1
              type: EcdsaSecp256k1VerificationKey2019
            uri: did:prism:c7bd808e8e135236d7262ecf5e639b8f9d22bd886f59a4e6c909486846ca8319#key-1
          controller: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
          service:
          - id: service-1
            serviceEndpoint:
            - https://bar.example.com
            - https://bar.example.com
            type: LinkedDomains
          - id: service-1
            serviceEndpoint:
            - https://bar.example.com
            - https://bar.example.com
            type: LinkedDomains
          keyAgreement:
          - type: EMBEDDED
            verificationMethod:
              controller: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
              publicKeyJwk:
                kty: EC
                crv: secp256k1
                x: 38M1FDts7Oea7urmseiugGW7tWc3mLpJh6rKe7xINZ8
                "y": nDQW6XZ7b_u2Sy9slofYLlG03sOEoug3I0aAPQ0exs4
              id: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff#key-1
              type: EcdsaSecp256k1VerificationKey2019
            uri: did:prism:c7bd808e8e135236d7262ecf5e639b8f9d22bd886f59a4e6c909486846ca8319#key-1
          - type: EMBEDDED
            verificationMethod:
              controller: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
              publicKeyJwk:
                kty: EC
                crv: secp256k1
                x: 38M1FDts7Oea7urmseiugGW7tWc3mLpJh6rKe7xINZ8
                "y": nDQW6XZ7b_u2Sy9slofYLlG03sOEoug3I0aAPQ0exs4
              id: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff#key-1
              type: EcdsaSecp256k1VerificationKey2019
            uri: did:prism:c7bd808e8e135236d7262ecf5e639b8f9d22bd886f59a4e6c909486846ca8319#key-1
          capabilityDelegation:
          - type: EMBEDDED
            verificationMethod:
              controller: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
              publicKeyJwk:
                kty: EC
                crv: secp256k1
                x: 38M1FDts7Oea7urmseiugGW7tWc3mLpJh6rKe7xINZ8
                "y": nDQW6XZ7b_u2Sy9slofYLlG03sOEoug3I0aAPQ0exs4
              id: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff#key-1
              type: EcdsaSecp256k1VerificationKey2019
            uri: did:prism:c7bd808e8e135236d7262ecf5e639b8f9d22bd886f59a4e6c909486846ca8319#key-1
          - type: EMBEDDED
            verificationMethod:
              controller: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
              publicKeyJwk:
                kty: EC
                crv: secp256k1
                x: 38M1FDts7Oea7urmseiugGW7tWc3mLpJh6rKe7xINZ8
                "y": nDQW6XZ7b_u2Sy9slofYLlG03sOEoug3I0aAPQ0exs4
              id: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff#key-1
              type: EcdsaSecp256k1VerificationKey2019
            uri: did:prism:c7bd808e8e135236d7262ecf5e639b8f9d22bd886f59a4e6c909486846ca8319#key-1
          id: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
          verificationMethod:
          - controller: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
            publicKeyJwk:
              kty: EC
              crv: secp256k1
              x: 38M1FDts7Oea7urmseiugGW7tWc3mLpJh6rKe7xINZ8
              "y": nDQW6XZ7b_u2Sy9slofYLlG03sOEoug3I0aAPQ0exs4
            id: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff#key-1
            type: EcdsaSecp256k1VerificationKey2019
          - controller: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
            publicKeyJwk:
              kty: EC
              crv: secp256k1
              x: 38M1FDts7Oea7urmseiugGW7tWc3mLpJh6rKe7xINZ8
              "y": nDQW6XZ7b_u2Sy9slofYLlG03sOEoug3I0aAPQ0exs4
            id: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff#key-1
            type: EcdsaSecp256k1VerificationKey2019
          capabilityInvocation:
          - type: EMBEDDED
            verificationMethod:
              controller: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
              publicKeyJwk:
                kty: EC
                crv: secp256k1
                x: 38M1FDts7Oea7urmseiugGW7tWc3mLpJh6rKe7xINZ8
                "y": nDQW6XZ7b_u2Sy9slofYLlG03sOEoug3I0aAPQ0exs4
              id: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff#key-1
              type: EcdsaSecp256k1VerificationKey2019
            uri: did:prism:c7bd808e8e135236d7262ecf5e639b8f9d22bd886f59a4e6c909486846ca8319#key-1
          - type: EMBEDDED
            verificationMethod:
              controller: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
              publicKeyJwk:
                kty: EC
                crv: secp256k1
                x: 38M1FDts7Oea7urmseiugGW7tWc3mLpJh6rKe7xINZ8
                "y": nDQW6XZ7b_u2Sy9slofYLlG03sOEoug3I0aAPQ0exs4
              id: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff#key-1
              type: EcdsaSecp256k1VerificationKey2019
            uri: did:prism:c7bd808e8e135236d7262ecf5e639b8f9d22bd886f59a4e6c909486846ca8319#key-1
          authentication:
          - type: EMBEDDED
            verificationMethod:
              controller: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
              publicKeyJwk:
                kty: EC
                crv: secp256k1
                x: 38M1FDts7Oea7urmseiugGW7tWc3mLpJh6rKe7xINZ8
                "y": nDQW6XZ7b_u2Sy9slofYLlG03sOEoug3I0aAPQ0exs4
              id: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff#key-1
              type: EcdsaSecp256k1VerificationKey2019
            uri: did:prism:c7bd808e8e135236d7262ecf5e639b8f9d22bd886f59a4e6c909486846ca8319#key-1
          - type: EMBEDDED
            verificationMethod:
              controller: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
              publicKeyJwk:
                kty: EC
                crv: secp256k1
                x: 38M1FDts7Oea7urmseiugGW7tWc3mLpJh6rKe7xINZ8
                "y": nDQW6XZ7b_u2Sy9slofYLlG03sOEoug3I0aAPQ0exs4
              id: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff#key-1
              type: EcdsaSecp256k1VerificationKey2019
            uri: did:prism:c7bd808e8e135236d7262ecf5e639b8f9d22bd886f59a4e6c909486846ca8319#key-1
      properties:
        did:
          $ref: '#/components/schemas/DID'
        metadata:
          $ref: '#/components/schemas/DIDDocumentMetadata'
      required:
      - did
      - metadata
      type: object
    DID:
      description: |
        A core DID data model capable of being transformed into W3C compliant representation.
      example:
        assertionMethod:
        - type: EMBEDDED
          verificationMethod:
            controller: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
            publicKeyJwk:
              kty: EC
              crv: secp256k1
              x: 38M1FDts7Oea7urmseiugGW7tWc3mLpJh6rKe7xINZ8
              "y": nDQW6XZ7b_u2Sy9slofYLlG03sOEoug3I0aAPQ0exs4
            id: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff#key-1
            type: EcdsaSecp256k1VerificationKey2019
          uri: did:prism:c7bd808e8e135236d7262ecf5e639b8f9d22bd886f59a4e6c909486846ca8319#key-1
        - type: EMBEDDED
          verificationMethod:
            controller: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
            publicKeyJwk:
              kty: EC
              crv: secp256k1
              x: 38M1FDts7Oea7urmseiugGW7tWc3mLpJh6rKe7xINZ8
              "y": nDQW6XZ7b_u2Sy9slofYLlG03sOEoug3I0aAPQ0exs4
            id: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff#key-1
            type: EcdsaSecp256k1VerificationKey2019
          uri: did:prism:c7bd808e8e135236d7262ecf5e639b8f9d22bd886f59a4e6c909486846ca8319#key-1
        controller: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
        service:
        - id: service-1
          serviceEndpoint:
          - https://bar.example.com
          - https://bar.example.com
          type: LinkedDomains
        - id: service-1
          serviceEndpoint:
          - https://bar.example.com
          - https://bar.example.com
          type: LinkedDomains
        keyAgreement:
        - type: EMBEDDED
          verificationMethod:
            controller: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
            publicKeyJwk:
              kty: EC
              crv: secp256k1
              x: 38M1FDts7Oea7urmseiugGW7tWc3mLpJh6rKe7xINZ8
              "y": nDQW6XZ7b_u2Sy9slofYLlG03sOEoug3I0aAPQ0exs4
            id: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff#key-1
            type: EcdsaSecp256k1VerificationKey2019
          uri: did:prism:c7bd808e8e135236d7262ecf5e639b8f9d22bd886f59a4e6c909486846ca8319#key-1
        - type: EMBEDDED
          verificationMethod:
            controller: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
            publicKeyJwk:
              kty: EC
              crv: secp256k1
              x: 38M1FDts7Oea7urmseiugGW7tWc3mLpJh6rKe7xINZ8
              "y": nDQW6XZ7b_u2Sy9slofYLlG03sOEoug3I0aAPQ0exs4
            id: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff#key-1
            type: EcdsaSecp256k1VerificationKey2019
          uri: did:prism:c7bd808e8e135236d7262ecf5e639b8f9d22bd886f59a4e6c909486846ca8319#key-1
        capabilityDelegation:
        - type: EMBEDDED
          verificationMethod:
            controller: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
            publicKeyJwk:
              kty: EC
              crv: secp256k1
              x: 38M1FDts7Oea7urmseiugGW7tWc3mLpJh6rKe7xINZ8
              "y": nDQW6XZ7b_u2Sy9slofYLlG03sOEoug3I0aAPQ0exs4
            id: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff#key-1
            type: EcdsaSecp256k1VerificationKey2019
          uri: did:prism:c7bd808e8e135236d7262ecf5e639b8f9d22bd886f59a4e6c909486846ca8319#key-1
        - type: EMBEDDED
          verificationMethod:
            controller: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
            publicKeyJwk:
              kty: EC
              crv: secp256k1
              x: 38M1FDts7Oea7urmseiugGW7tWc3mLpJh6rKe7xINZ8
              "y": nDQW6XZ7b_u2Sy9slofYLlG03sOEoug3I0aAPQ0exs4
            id: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff#key-1
            type: EcdsaSecp256k1VerificationKey2019
          uri: did:prism:c7bd808e8e135236d7262ecf5e639b8f9d22bd886f59a4e6c909486846ca8319#key-1
        id: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
        verificationMethod:
        - controller: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
          publicKeyJwk:
            kty: EC
            crv: secp256k1
            x: 38M1FDts7Oea7urmseiugGW7tWc3mLpJh6rKe7xINZ8
            "y": nDQW6XZ7b_u2Sy9slofYLlG03sOEoug3I0aAPQ0exs4
          id: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff#key-1
          type: EcdsaSecp256k1VerificationKey2019
        - controller: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
          publicKeyJwk:
            kty: EC
            crv: secp256k1
            x: 38M1FDts7Oea7urmseiugGW7tWc3mLpJh6rKe7xINZ8
            "y": nDQW6XZ7b_u2Sy9slofYLlG03sOEoug3I0aAPQ0exs4
          id: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff#key-1
          type: EcdsaSecp256k1VerificationKey2019
        capabilityInvocation:
        - type: EMBEDDED
          verificationMethod:
            controller: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
            publicKeyJwk:
              kty: EC
              crv: secp256k1
              x: 38M1FDts7Oea7urmseiugGW7tWc3mLpJh6rKe7xINZ8
              "y": nDQW6XZ7b_u2Sy9slofYLlG03sOEoug3I0aAPQ0exs4
            id: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff#key-1
            type: EcdsaSecp256k1VerificationKey2019
          uri: did:prism:c7bd808e8e135236d7262ecf5e639b8f9d22bd886f59a4e6c909486846ca8319#key-1
        - type: EMBEDDED
          verificationMethod:
            controller: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
            publicKeyJwk:
              kty: EC
              crv: secp256k1
              x: 38M1FDts7Oea7urmseiugGW7tWc3mLpJh6rKe7xINZ8
              "y": nDQW6XZ7b_u2Sy9slofYLlG03sOEoug3I0aAPQ0exs4
            id: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff#key-1
            type: EcdsaSecp256k1VerificationKey2019
          uri: did:prism:c7bd808e8e135236d7262ecf5e639b8f9d22bd886f59a4e6c909486846ca8319#key-1
        authentication:
        - type: EMBEDDED
          verificationMethod:
            controller: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
            publicKeyJwk:
              kty: EC
              crv: secp256k1
              x: 38M1FDts7Oea7urmseiugGW7tWc3mLpJh6rKe7xINZ8
              "y": nDQW6XZ7b_u2Sy9slofYLlG03sOEoug3I0aAPQ0exs4
            id: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff#key-1
            type: EcdsaSecp256k1VerificationKey2019
          uri: did:prism:c7bd808e8e135236d7262ecf5e639b8f9d22bd886f59a4e6c909486846ca8319#key-1
        - type: EMBEDDED
          verificationMethod:
            controller: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
            publicKeyJwk:
              kty: EC
              crv: secp256k1
              x: 38M1FDts7Oea7urmseiugGW7tWc3mLpJh6rKe7xINZ8
              "y": nDQW6XZ7b_u2Sy9slofYLlG03sOEoug3I0aAPQ0exs4
            id: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff#key-1
            type: EcdsaSecp256k1VerificationKey2019
          uri: did:prism:c7bd808e8e135236d7262ecf5e639b8f9d22bd886f59a4e6c909486846ca8319#key-1
      properties:
        id:
          example: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
          type: string
        controller:
          example: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
          type: string
        verificationMethod:
          items:
            $ref: '#/components/schemas/VerificationMethod'
          type: array
        authentication:
          items:
            $ref: '#/components/schemas/VerificationMethodOrRef'
          type: array
        assertionMethod:
          items:
            $ref: '#/components/schemas/VerificationMethodOrRef'
          type: array
        keyAgreement:
          items:
            $ref: '#/components/schemas/VerificationMethodOrRef'
          type: array
        capabilityInvocation:
          items:
            $ref: '#/components/schemas/VerificationMethodOrRef'
          type: array
        capabilityDelegation:
          items:
            $ref: '#/components/schemas/VerificationMethodOrRef'
          type: array
        service:
          items:
            $ref: '#/components/schemas/Service'
          type: array
      required:
      - id
      type: object
    VerificationMethod:
      example:
        controller: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
        publicKeyJwk:
          kty: EC
          crv: secp256k1
          x: 38M1FDts7Oea7urmseiugGW7tWc3mLpJh6rKe7xINZ8
          "y": nDQW6XZ7b_u2Sy9slofYLlG03sOEoug3I0aAPQ0exs4
        id: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff#key-1
        type: EcdsaSecp256k1VerificationKey2019
      properties:
        id:
          example: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff#key-1
          type: string
        type:
          example: EcdsaSecp256k1VerificationKey2019
          type: string
        controller:
          example: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
          type: string
        publicKeyJwk:
          $ref: '#/components/schemas/PublicKeyJwk'
      required:
      - controller
      - id
      - publicKeyJwk
      - type
      type: object
    PublicKeyJwk:
      example:
        kty: EC
        crv: secp256k1
        x: 38M1FDts7Oea7urmseiugGW7tWc3mLpJh6rKe7xINZ8
        "y": nDQW6XZ7b_u2Sy9slofYLlG03sOEoug3I0aAPQ0exs4
      properties:
        crv:
          example: secp256k1
          type: string
        x:
          example: 38M1FDts7Oea7urmseiugGW7tWc3mLpJh6rKe7xINZ8
          type: string
        "y":
          example: nDQW6XZ7b_u2Sy9slofYLlG03sOEoug3I0aAPQ0exs4
          type: string
        kty:
          example: EC
          type: string
      required:
      - kty
      type: object
    VerificationMethodOrRef:
      description: |
        An embedded verificationMethod as JSON or a referenced key as a URI.
        Referenced key and embedded key are mutually exclusive.
        If the type is EMBEDDED, `uri` field must be present.
        Otherwise `verificationMethod` field must be present.
      example:
        type: EMBEDDED
        verificationMethod:
          controller: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
          publicKeyJwk:
            kty: EC
            crv: secp256k1
            x: 38M1FDts7Oea7urmseiugGW7tWc3mLpJh6rKe7xINZ8
            "y": nDQW6XZ7b_u2Sy9slofYLlG03sOEoug3I0aAPQ0exs4
          id: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff#key-1
          type: EcdsaSecp256k1VerificationKey2019
        uri: did:prism:c7bd808e8e135236d7262ecf5e639b8f9d22bd886f59a4e6c909486846ca8319#key-1
      properties:
        type:
          enum:
          - EMBEDDED
          - REFERENCED
          example: EMBEDDED
          type: string
        uri:
          example: did:prism:c7bd808e8e135236d7262ecf5e639b8f9d22bd886f59a4e6c909486846ca8319#key-1
          type: string
        verificationMethod:
          $ref: '#/components/schemas/VerificationMethod'
      required:
      - type
      type: object
    Service:
      example:
        id: service-1
        serviceEndpoint:
        - https://bar.example.com
        - https://bar.example.com
        type: LinkedDomains
      properties:
        id:
          example: service-1
          type: string
        type:
          enum:
          - LinkedDomains
          example: LinkedDomains
          type: string
        serviceEndpoint:
          items:
            example: https://bar.example.com
            type: string
          type: array
      required:
      - id
      - serviceEndpoint
      - type
      type: object
    DIDDocumentMetadata:
      example:
        canonicalId: canonicalId
        deactivated: true
      properties:
        deactivated:
          description: "If a DID has been deactivated, DID document metadata MUST\
            \ include this property with the boolean value true. If a DID has not\
            \ been deactivated, this property is OPTIONAL, but if included, MUST have\
            \ the boolean value false."
          type: boolean
        canonicalId:
          description: A DID in canonical form
          type: string
      required:
      - deactivated
      type: object
    ErrorResponse:
      description: An RFC-7807 compliant data structure for reporting errors to the
        client
      properties:
        type:
          description: A URI reference that identifies the problem type.
          example: https://example.org/doc/#model-MalformedEmail
          type: string
        title:
          description: |-
            A short, human-readable summary of the problem type. It does not
            change from occurrence to occurrence of the problem.
          example: Malformed email
          type: string
        status:
          description: The HTTP status code for this occurrence of the problem.
          example: 400
          format: int32
          type: integer
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          example: "The received '{}à!è@!.b}' email does not conform to the email\
            \ format"
          type: string
        instance:
          description: |-
            A URI reference that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
          example: /problems/d914e
          type: string
      required:
      - instance
      - status
      - title
      - type
      type: object
    ManagedDIDPage:
      example:
        pageOf: pageOf
        next: next
        previous: previous
        contents:
        - longFormDid: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff:Cr4BCrsBElsKBmF1dGgtMRAEQk8KCXNlY3AyNTZrMRIg0opTuxu-zt6aRbT1tPniG4eu4CYsQPM3rrLzvzNiNgwaIIFTnyT2N4U7qCQ78qtWC3-p0el6Hvv8qxG5uuEw-WgMElwKB21hc3RlcjAQAUJPCglzZWNwMjU2azESIKhBU0eCOO6Vinz_8vhtFSAhYYqrkEXC8PHGxkuIUev8GiAydFHLXb7c22A1Uj_PR21NZp6BCDQqNq2xd244txRgsQ
          did: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
          status: CREATED
        - longFormDid: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff:Cr4BCrsBElsKBmF1dGgtMRAEQk8KCXNlY3AyNTZrMRIg0opTuxu-zt6aRbT1tPniG4eu4CYsQPM3rrLzvzNiNgwaIIFTnyT2N4U7qCQ78qtWC3-p0el6Hvv8qxG5uuEw-WgMElwKB21hc3RlcjAQAUJPCglzZWNwMjU2azESIKhBU0eCOO6Vinz_8vhtFSAhYYqrkEXC8PHGxkuIUev8GiAydFHLXb7c22A1Uj_PR21NZp6BCDQqNq2xd244txRgsQ
          did: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
          status: CREATED
        kind: kind
        self: self
      properties:
        self:
          type: string
        kind:
          type: string
        pageOf:
          type: string
        next:
          type: string
        previous:
          type: string
        contents:
          items:
            $ref: '#/components/schemas/ManagedDID'
          type: array
      required:
      - kind
      - pageOf
      - self
      type: object
    ManagedDID:
      example:
        longFormDid: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff:Cr4BCrsBElsKBmF1dGgtMRAEQk8KCXNlY3AyNTZrMRIg0opTuxu-zt6aRbT1tPniG4eu4CYsQPM3rrLzvzNiNgwaIIFTnyT2N4U7qCQ78qtWC3-p0el6Hvv8qxG5uuEw-WgMElwKB21hc3RlcjAQAUJPCglzZWNwMjU2azESIKhBU0eCOO6Vinz_8vhtFSAhYYqrkEXC8PHGxkuIUev8GiAydFHLXb7c22A1Uj_PR21NZp6BCDQqNq2xd244txRgsQ
        did: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
        status: CREATED
      properties:
        did:
          example: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
          type: string
        longFormDid:
          description: A long-form DID. Mandatory when status is not PUBLISHED and
            optional when status is PUBLISHED
          example: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff:Cr4BCrsBElsKBmF1dGgtMRAEQk8KCXNlY3AyNTZrMRIg0opTuxu-zt6aRbT1tPniG4eu4CYsQPM3rrLzvzNiNgwaIIFTnyT2N4U7qCQ78qtWC3-p0el6Hvv8qxG5uuEw-WgMElwKB21hc3RlcjAQAUJPCglzZWNwMjU2azESIKhBU0eCOO6Vinz_8vhtFSAhYYqrkEXC8PHGxkuIUev8GiAydFHLXb7c22A1Uj_PR21NZp6BCDQqNq2xd244txRgsQ
          type: string
        status:
          description: |
            A status indicating a publication state of a DID in the wallet (e.g. PUBLICATION_PENDING, PUBLISHED).
            Does not represent DID a full lifecyle (e.g. deactivated, recovered, updated).
          enum:
          - CREATED
          - PUBLICATION_PENDING
          - PUBLISHED
          type: string
      required:
      - did
      - status
      type: object
    CreateManagedDidRequest:
      example:
        documentTemplate:
          publicKeys:
          - purpose: authentication
            id: key-1
          - purpose: authentication
            id: key-1
          services:
          - id: service-1
            serviceEndpoint:
            - https://bar.example.com
            - https://bar.example.com
            type: LinkedDomains
          - id: service-1
            serviceEndpoint:
            - https://bar.example.com
            - https://bar.example.com
            type: LinkedDomains
      properties:
        documentTemplate:
          $ref: '#/components/schemas/CreateManagedDidRequest_documentTemplate'
      required:
      - documentTemplate
      type: object
    ManagedDIDKeyTemplate:
      description: key-pair template to add to DID document.
      example:
        purpose: authentication
        id: key-1
      properties:
        id:
          description: Identifier of a verification material in the DID Document
          example: key-1
          type: string
        purpose:
          enum:
          - authentication
          - assertionMethod
          - keyAgreement
          - capabilityInvocation
          - capabilityDelegation
          example: authentication
          type: string
      required:
      - id
      - purpose
      type: object
    CreateManagedDIDResponse:
      example:
        longFormDid: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff:Cr4BCrsBElsKBmF1dGgtMRAEQk8KCXNlY3AyNTZrMRIg0opTuxu-zt6aRbT1tPniG4eu4CYsQPM3rrLzvzNiNgwaIIFTnyT2N4U7qCQ78qtWC3-p0el6Hvv8qxG5uuEw-WgMElwKB21hc3RlcjAQAUJPCglzZWNwMjU2azESIKhBU0eCOO6Vinz_8vhtFSAhYYqrkEXC8PHGxkuIUev8GiAydFHLXb7c22A1Uj_PR21NZp6BCDQqNq2xd244txRgsQ
      properties:
        longFormDid:
          description: A long-form DID for the created DID
          example: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff:Cr4BCrsBElsKBmF1dGgtMRAEQk8KCXNlY3AyNTZrMRIg0opTuxu-zt6aRbT1tPniG4eu4CYsQPM3rrLzvzNiNgwaIIFTnyT2N4U7qCQ78qtWC3-p0el6Hvv8qxG5uuEw-WgMElwKB21hc3RlcjAQAUJPCglzZWNwMjU2azESIKhBU0eCOO6Vinz_8vhtFSAhYYqrkEXC8PHGxkuIUev8GiAydFHLXb7c22A1Uj_PR21NZp6BCDQqNq2xd244txRgsQ
          type: string
      required:
      - longFormDid
      type: object
    DIDOperationResponse:
      example:
        scheduledOperation:
          id: 98e6a4db10e58fcc011dd8def5ce99fd8b52af39e61e5fb436dc28259139818b
          didRef: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
      properties:
        scheduledOperation:
          $ref: '#/components/schemas/DidOperationSubmission'
      required:
      - scheduledOperation
      type: object
    DidOperationSubmission:
      example:
        id: 98e6a4db10e58fcc011dd8def5ce99fd8b52af39e61e5fb436dc28259139818b
        didRef: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
      properties:
        id:
          example: 98e6a4db10e58fcc011dd8def5ce99fd8b52af39e61e5fb436dc28259139818b
          type: string
        didRef:
          example: did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff
          type: string
      required:
      - didRef
      - id
      type: object
    UpdateManagedDIDRequest:
      example:
        actions:
        - actionType: ADD_KEY
          removeKey:
            id: key-1
          removeService:
            id: service-1
          addService:
            id: service-1
            serviceEndpoint:
            - https://bar.example.com
            - https://bar.example.com
            type: LinkedDomains
          updateService:
            id: service-1
            serviceEndpoint:
            - https://bar.example.com
            - https://bar.example.com
            type: LinkedDomains
          addKey:
            purpose: authentication
            id: key-1
        - actionType: ADD_KEY
          removeKey:
            id: key-1
          removeService:
            id: service-1
          addService:
            id: service-1
            serviceEndpoint:
            - https://bar.example.com
            - https://bar.example.com
            type: LinkedDomains
          updateService:
            id: service-1
            serviceEndpoint:
            - https://bar.example.com
            - https://bar.example.com
            type: LinkedDomains
          addKey:
            purpose: authentication
            id: key-1
      properties:
        actions:
          description: |
            A list of actions to perform on DID document.
            The field `addKey`, `removeKey`, `addService`, `removeService`, `updateService` must corresponds to
            the `actionType` specified. For example, `addKey` must be present when `actionType` is `ADD_KEY`.
          items:
            $ref: '#/components/schemas/UpdateManagedDIDRequest_actions_inner'
          type: array
      required:
      - actions
      type: object
    VerifiableCredentialSchemaPage:
      example:
        pageOf: pageOf
        next: next
        previous: previous
        contents:
        - authored: 2000-01-23T04:56:07.000+00:00
          author: author
          name: name
          description: description
          attributes:
          - attributes
          - attributes
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          proof:
            proofValue: proofValue
            created: 2000-01-23T04:56:07.000+00:00
            domain: domain
            proofPurpose: proofPurpose
            type: type
            verificationMethod: verificationMethod
          version: version
          tags:
          - tags
          - tags
        - authored: 2000-01-23T04:56:07.000+00:00
          author: author
          name: name
          description: description
          attributes:
          - attributes
          - attributes
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          proof:
            proofValue: proofValue
            created: 2000-01-23T04:56:07.000+00:00
            domain: domain
            proofPurpose: proofPurpose
            type: type
            verificationMethod: verificationMethod
          version: version
          tags:
          - tags
          - tags
        kind: kind
        self: self
      properties:
        self:
          type: string
        kind:
          type: string
        pageOf:
          type: string
        next:
          type: string
        previous:
          type: string
        contents:
          items:
            $ref: '#/components/schemas/VerifiableCredentialSchema'
          type: array
      required:
      - kind
      - pageOf
      - self
      type: object
    VerifiableCredentialSchema:
      example:
        authored: 2000-01-23T04:56:07.000+00:00
        author: author
        name: name
        description: description
        attributes:
        - attributes
        - attributes
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        proof:
          proofValue: proofValue
          created: 2000-01-23T04:56:07.000+00:00
          domain: domain
          proofPurpose: proofPurpose
          type: type
          verificationMethod: verificationMethod
        version: version
        tags:
        - tags
        - tags
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        version:
          type: string
        tags:
          items:
            type: string
          type: array
        description:
          type: string
        attributes:
          items:
            type: string
          type: array
        author:
          type: string
        authored:
          format: date-time
          type: string
        proof:
          $ref: '#/components/schemas/Proof'
      required:
      - author
      - authored
      - id
      - name
      - version
      type: object
    Proof:
      example:
        proofValue: proofValue
        created: 2000-01-23T04:56:07.000+00:00
        domain: domain
        proofPurpose: proofPurpose
        type: type
        verificationMethod: verificationMethod
      properties:
        type:
          type: string
        created:
          format: date-time
          type: string
        verificationMethod:
          type: string
        proofPurpose:
          type: string
        proofValue:
          type: string
        domain:
          type: string
      required:
      - created
      - proofPurpose
      - proofValue
      - type
      - verificationMethod
      type: object
    InternalServerError:
      properties:
        msg:
          type: string
      required:
      - msg
      type: object
    VerificationCredentialSchemaInput:
      example:
        authored: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        attributes:
        - attributes
        - attributes
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        version: version
        tags:
        - tags
        - tags
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        version:
          type: string
        description:
          type: string
        attributes:
          items:
            type: string
          type: array
        authored:
          format: date-time
          type: string
        tags:
          items:
            type: string
          type: array
      required:
      - name
      - version
      type: object
    NotFound:
      properties:
        msg:
          type: string
      required:
      - msg
      type: object
    VerificationPolicyPage:
      example:
        pageOf: pageOf
        next: next
        previous: previous
        contents:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          kind: kind
          name: name
          self: self
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          nonce: 0
          constraints:
          - trustedIssuers:
            - trustedIssuers
            - trustedIssuers
            schemaId: schemaId
          - trustedIssuers:
            - trustedIssuers
            - trustedIssuers
            schemaId: schemaId
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          kind: kind
          name: name
          self: self
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          nonce: 0
          constraints:
          - trustedIssuers:
            - trustedIssuers
            - trustedIssuers
            schemaId: schemaId
          - trustedIssuers:
            - trustedIssuers
            - trustedIssuers
            schemaId: schemaId
          updatedAt: 2000-01-23T04:56:07.000+00:00
        kind: kind
        self: self
      properties:
        self:
          type: string
        kind:
          type: string
        pageOf:
          type: string
        next:
          type: string
        previous:
          type: string
        contents:
          items:
            $ref: '#/components/schemas/VerificationPolicy'
          type: array
      required:
      - kind
      - pageOf
      - self
      type: object
    VerificationPolicy:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        kind: kind
        name: name
        self: self
        description: description
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        nonce: 0
        constraints:
        - trustedIssuers:
          - trustedIssuers
          - trustedIssuers
          schemaId: schemaId
        - trustedIssuers:
          - trustedIssuers
          - trustedIssuers
          schemaId: schemaId
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        self:
          type: string
        kind:
          type: string
        id:
          format: uuid
          type: string
        nonce:
          format: int32
          type: integer
        name:
          type: string
        description:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        constraints:
          items:
            $ref: '#/components/schemas/VerificationPolicyConstraint'
          type: array
      required:
      - createdAt
      - description
      - id
      - kind
      - name
      - nonce
      - self
      - updatedAt
      type: object
    VerificationPolicyConstraint:
      example:
        trustedIssuers:
        - trustedIssuers
        - trustedIssuers
        schemaId: schemaId
      properties:
        schemaId:
          type: string
        trustedIssuers:
          items:
            type: string
          type: array
      required:
      - schemaId
      type: object
    BadRequest:
      properties:
        msg:
          type: string
        errors:
          items:
            type: string
          type: array
      required:
      - msg
      type: object
    VerificationPolicyInput:
      example:
        name: name
        description: description
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        constraints:
        - trustedIssuers:
          - trustedIssuers
          - trustedIssuers
          schemaId: schemaId
        - trustedIssuers:
          - trustedIssuers
          - trustedIssuers
          schemaId: schemaId
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        description:
          type: string
        constraints:
          items:
            $ref: '#/components/schemas/VerificationPolicyConstraint'
          type: array
      required:
      - description
      - name
      type: object
    CreateIssueCredentialRecordRequest:
      allOf:
      - $ref: '#/components/schemas/IssueCredentialRecordBase'
      - $ref: '#/components/schemas/CreateIssueCredentialRecordRequest_allOf'
      description: A request to create a new "issue credential record".
      type: object
    IssueCredentialRecordBase:
      properties:
        schemaId:
          description: The unique identifier of the schema used for this credential
            offer.
          type: string
        subjectId:
          description: The identifier (e.g DID) of the subject to which the verifiable
            credential will be issued.
          example: did:prism:subjectofverifiablecredentials
          type: string
        validityPeriod:
          description: The validity period in seconds of the verifiable credential
            that will be issued.
          example: 3600
          type: number
        claims:
          additionalProperties:
            type: string
          description: The claims that will be associated with the issued verifiable
            credential.
          type: object
        automaticIssuance:
          default: true
          description: |
            Specifies whether or not the credential should be automatically generated and issued when receiving the `CredentialRequest` from the holder.
            If set to `false`, a manual approval by the issuer via API call will be required for the VC to be issued.
          type: boolean
      required:
      - claims
      - subjectId
    IssueCredentialRecord:
      allOf:
      - $ref: '#/components/schemas/IssueCredentialRecordBase'
      - $ref: '#/components/schemas/IssueCredentialRecord_allOf'
      description: An issue credential record that stores the state of the protocol
        execution.
      type: object
    IssueCredentialRecordCollection:
      description: A collection of issue credential records.
      example:
        contents:
        - null
        - null
      properties:
        contents:
          description: The array containing the list of issue credential records.
          items:
            $ref: '#/components/schemas/IssueCredentialRecord'
          type: array
      required:
      - contents
    PresentationStatus:
      description: The proof presentation record.
      example:
        presentationId: 3c6d9fa5-d277-431e-a6cb-d3956e47e610
        data:
        - data
        - data
        proofs:
        - schemaId: https://schema.org/Person
          trustIssuers:
          - did:web:atalaprism.io/users/testUser
          - did.prism:123
          - did:prism:...
        - schemaId: https://schema.org/Person
          trustIssuers:
          - did:web:atalaprism.io/users/testUser
          - did.prism:123
          - did:prism:...
        connectionId: bc528dc8-69f1-4c5a-a508-5f8019047900
        status: RequestPending
      properties:
        presentationId:
          description: The unique identifier of the presentation record.
          example: 3c6d9fa5-d277-431e-a6cb-d3956e47e610
          type: string
        status:
          description: The current state of the proof presentation record.
          enum:
          - RequestPending
          - RequestSent
          - RequestReceived
          - RequestRejected
          - PresentationPending
          - PresentationGenerated
          - PresentationSent
          - PresentationReceived
          - PresentationVerified
          - PresentationAccepted
          - PresentationRejected
          - ProblemReportPending
          - ProblemReportSent
          - ProblemReportReceived
          type: string
        proofs:
          description: "The type of proofs requested in the context of this proof\
            \ presentation request (e.g., VC schema, trusted issuers, etc.)"
          items:
            $ref: '#/components/schemas/ProofRequestAux'
          type: array
        data:
          description: The list of proofs presented by the prover to the verifier.
          items:
            type: string
          type: array
        connectionId:
          description: The unique identifier of an established connection between
            the verifier and the prover.
          example: bc528dc8-69f1-4c5a-a508-5f8019047900
          type: string
      required:
      - data
      - presentationId
      - proofs
      - status
    ProofRequestAux:
      example:
        schemaId: https://schema.org/Person
        trustIssuers:
        - did:web:atalaprism.io/users/testUser
        - did.prism:123
        - did:prism:...
      properties:
        schemaId:
          description: The unique identifier of a schema the VC should comply with.
          example: https://schema.org/Person
          type: string
        trustIssuers:
          description: One or more issuers that are trusted by the verifier emitting
            the proof presentation request.
          example:
          - did:web:atalaprism.io/users/testUser
          - did.prism:123
          - did:prism:...
          items:
            type: string
          type: array
      required:
      - schemaId
      - trustIssuers
    RequestPresentationInput:
      description: A request to create a new "proof presentation" record and send
        it to the prover.
      example:
        proofs:
        - schemaId: https://schema.org/Person
          trustIssuers:
          - did:web:atalaprism.io/users/testUser
          - did.prism:123
          - did:prism:...
        - schemaId: https://schema.org/Person
          trustIssuers:
          - did:web:atalaprism.io/users/testUser
          - did.prism:123
          - did:prism:...
        options:
          domain: https://example-verifier.com
          challenge: 11c91493-01b3-4c4d-ac36-b336bab5bddf
        connectionId: bc528dc8-69f1-4c5a-a508-5f8019047900
      properties:
        connectionId:
          description: The unique identifier of an established connection between
            the verifier and the prover.
          example: bc528dc8-69f1-4c5a-a508-5f8019047900
          type: string
        options:
          $ref: '#/components/schemas/Options'
        proofs:
          description: "The type of proofs requested in the context of this proof\
            \ presentation request (e.g., VC schema, trusted issuers, etc.)"
          items:
            $ref: '#/components/schemas/ProofRequestAux'
          type: array
      required:
      - connectionId
      - proofs
    Options:
      example:
        domain: https://example-verifier.com
        challenge: 11c91493-01b3-4c4d-ac36-b336bab5bddf
      properties:
        challenge:
          description: The challenge should be a randomly generated string.
          example: 11c91493-01b3-4c4d-ac36-b336bab5bddf
          type: string
        domain:
          description: The domain value can be any string or URI
          example: https://example-verifier.com
          type: string
      required:
      - challenge
      - domain
    RequestPresentationOutput:
      description: The proof presentation record details. Only the unique identifier
        for now.
      example:
        presentationId: presentationId
      properties:
        presentationId:
          description: Ref to the id on the presentation (db ref)
          type: string
      required:
      - presentationId
    RequestPresentationAction:
      description: The action to perform on the proof presentation record.
      example:
        action: request-accept
        proofId:
        - 0d3a0f8d-852e-42d5-a6f8-2281c4be945c
        - 0d3a0f8d-852e-42d5-a6f8-2281c4be945c
      properties:
        action:
          enum:
          - request-accept
          - request-reject
          - presentation-accept
          - presentation-reject
          type: string
        proofId:
          description: The unique identifier of the issue credential record - and
            hence VC - to use as the prover accepts the presentation request. Only
            applicable on the prover side when the action is `request-accept`.
          items:
            example: 0d3a0f8d-852e-42d5-a6f8-2281c4be945c
            type: string
          type: array
      required:
      - action
    ConnectionCollection:
      description: A collection of connection records.
      example:
        contents:
        - null
        - null
        kind: Collection
        self: https://atala-prism-products.io/connections
      properties:
        self:
          description: The reference to the connection collection itself.
          example: https://atala-prism-products.io/connections
          type: string
        kind:
          description: The type of object returned. In this case a `Collection`.
          example: Collection
          type: string
        contents:
          description: The array containing the list of connection records.
          items:
            $ref: '#/components/schemas/Connection'
          type: array
      required:
      - contents
      - kind
      - self
      type: object
    Connection:
      allOf:
      - $ref: '#/components/schemas/CreateConnectionRequest'
      - $ref: '#/components/schemas/Connection_allOf'
      description: A connection record.
      type: object
    CreateConnectionRequest:
      example:
        label: Peter
      properties:
        label:
          description: A human readable alias for the connection.
          example: Peter
          type: string
      type: object
    ConnectionInvitation:
      description: A connection invitation.
      properties:
        id:
          description: The unique identifier of the invitation. It should be used
            as parent thread ID (pthid) for the Connection Request message that follows.
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          format: uuid
          type: string
        type:
          description: The DIDComm Message Type URI (MTURI) the invitation message
            complies with.
          example: https://didcomm.org/out-of-band/2.0/invitation
          type: string
        from:
          description: The DID representing the sender to be used by recipients for
            future interactions.
          example: did:peer:1234457
          type: string
        invitationUrl:
          description: "The invitation message encoded as a URL. This URL follows\
            \ the Out of [Band 2.0 protocol](https://identity.foundation/didcomm-messaging/spec/v2.0/#out-of-band-messages)\
            \ and can be used to generate a QR code for example."
          example: https://domain.com/path?_oob=eyJAaWQiOiIzZmE4NWY2NC01NzE3LTQ1NjItYjNmYy0yYzk2M2Y2NmFmYTYiLCJAdHlwZSI6Imh0dHBzOi8vZGlkY29tbS5vcmcvbXktZmFtaWx5LzEuMC9teS1tZXNzYWdlLXR5cGUiLCJkaWQiOiJXZ1d4cXp0ck5vb0c5MlJYdnhTVFd2IiwiaW1hZ2VVcmwiOiJodHRwOi8vMTkyLjE2OC41Ni4xMDEvaW1nL2xvZ28uanBnIiwibGFiZWwiOiJCb2IiLCJyZWNpcGllbnRLZXlzIjpbIkgzQzJBVnZMTXY2Z21NTmFtM3VWQWpacGZrY0pDd0R3blpuNnozd1htcVBWIl0sInJvdXRpbmdLZXlzIjpbIkgzQzJBVnZMTXY2Z21NTmFtM3VWQWpacGZrY0pDd0R3blpuNnozd1htcVBWIl0sInNlcnZpY2VFbmRwb2ludCI6Imh0dHA6Ly8xOTIuMTY4LjU2LjEwMTo4MDIwIn0=
          type: string
      required:
      - from
      - id
      - invitationUrl
      - type
      type: object
    AcceptConnectionInvitationRequest:
      description: "The request used by an invitee to accept a connection invitation\
        \ received from an inviter, using out-of-band mechanism."
      example:
        invitation: eyJAaWQiOiIzZmE4NWY2NC01NzE3LTQ1NjItYjNmYy0yYzk2M2Y2NmFmYTYiLCJAdHlwZSI6Imh0dHBzOi8vZGlkY29tbS5vcmcvbXktZmFtaWx5LzEuMC9teS1tZXNzYWdlLXR5cGUiLCJkaWQiOiJXZ1d4cXp0ck5vb0c5MlJYdnhTVFd2IiwiaW1hZ2VVcmwiOiJodHRwOi8vMTkyLjE2OC41Ni4xMDEvaW1nL2xvZ28uanBnIiwibGFiZWwiOiJCb2IiLCJyZWNpcGllbnRLZXlzIjpbIkgzQzJBVnZMTXY2Z21NTmFtM3VWQWpacGZrY0pDd0R3blpuNnozd1htcVBWIl0sInJvdXRpbmdLZXlzIjpbIkgzQzJBVnZMTXY2Z21NTmFtM3VWQWpacGZrY0pDd0R3blpuNnozd1htcVBWIl0sInNlcnZpY2VFbmRwb2ludCI6Imh0dHA6Ly8xOTIuMTY4LjU2LjEwMTo4MDIwIn0=
      properties:
        invitation:
          description: The base64-encoded raw invitation.
          example: eyJAaWQiOiIzZmE4NWY2NC01NzE3LTQ1NjItYjNmYy0yYzk2M2Y2NmFmYTYiLCJAdHlwZSI6Imh0dHBzOi8vZGlkY29tbS5vcmcvbXktZmFtaWx5LzEuMC9teS1tZXNzYWdlLXR5cGUiLCJkaWQiOiJXZ1d4cXp0ck5vb0c5MlJYdnhTVFd2IiwiaW1hZ2VVcmwiOiJodHRwOi8vMTkyLjE2OC41Ni4xMDEvaW1nL2xvZ28uanBnIiwibGFiZWwiOiJCb2IiLCJyZWNpcGllbnRLZXlzIjpbIkgzQzJBVnZMTXY2Z21NTmFtM3VWQWpacGZrY0pDd0R3blpuNnozd1htcVBWIl0sInJvdXRpbmdLZXlzIjpbIkgzQzJBVnZMTXY2Z21NTmFtM3VWQWpacGZrY0pDd0R3blpuNnozd1htcVBWIl0sInNlcnZpY2VFbmRwb2ludCI6Imh0dHA6Ly8xOTIuMTY4LjU2LjEwMTo4MDIwIn0=
          type: string
      required:
      - invitation
      type: object
    CreateManagedDidRequest_documentTemplate:
      example:
        publicKeys:
        - purpose: authentication
          id: key-1
        - purpose: authentication
          id: key-1
        services:
        - id: service-1
          serviceEndpoint:
          - https://bar.example.com
          - https://bar.example.com
          type: LinkedDomains
        - id: service-1
          serviceEndpoint:
          - https://bar.example.com
          - https://bar.example.com
          type: LinkedDomains
      properties:
        publicKeys:
          items:
            $ref: '#/components/schemas/ManagedDIDKeyTemplate'
          type: array
        services:
          items:
            $ref: '#/components/schemas/Service'
          type: array
      required:
      - publicKeys
      - services
      - storage
      type: object
    UpdateManagedDIDRequest_actions_inner_removeKey:
      example:
        id: key-1
      properties:
        id:
          description: ID of key to remove from DID document
          example: key-1
          type: string
      required:
      - id
      type: object
    UpdateManagedDIDRequest_actions_inner_removeService:
      example:
        id: service-1
      properties:
        id:
          description: ID of service to remove from DID document
          example: service-1
          type: string
      required:
      - id
      type: object
    UpdateManagedDIDRequest_actions_inner_updateService:
      description: A patch to existing Service. 'type' and 'serviceEndpoint' must
        not be both empty.
      example:
        id: service-1
        serviceEndpoint:
        - https://bar.example.com
        - https://bar.example.com
        type: LinkedDomains
      properties:
        id:
          description: ID of existing service to update in the DID document
          example: service-1
          type: string
        type:
          enum:
          - LinkedDomains
          example: LinkedDomains
          type: string
        serviceEndpoint:
          items:
            example: https://bar.example.com
            type: string
          type: array
      required:
      - id
      type: object
    UpdateManagedDIDRequest_actions_inner:
      description: Detail of DID update action. Only property matching actionType
        can be present.
      example:
        actionType: ADD_KEY
        removeKey:
          id: key-1
        removeService:
          id: service-1
        addService:
          id: service-1
          serviceEndpoint:
          - https://bar.example.com
          - https://bar.example.com
          type: LinkedDomains
        updateService:
          id: service-1
          serviceEndpoint:
          - https://bar.example.com
          - https://bar.example.com
          type: LinkedDomains
        addKey:
          purpose: authentication
          id: key-1
      properties:
        actionType:
          enum:
          - ADD_KEY
          - REMOVE_KEY
          - ADD_SERVICE
          - REMOVE_SERVICE
          - UPDATE_SERVICE
          example: ADD_KEY
          type: string
        addKey:
          $ref: '#/components/schemas/ManagedDIDKeyTemplate'
        removeKey:
          $ref: '#/components/schemas/UpdateManagedDIDRequest_actions_inner_removeKey'
        addService:
          $ref: '#/components/schemas/Service'
        removeService:
          $ref: '#/components/schemas/UpdateManagedDIDRequest_actions_inner_removeService'
        updateService:
          $ref: '#/components/schemas/UpdateManagedDIDRequest_actions_inner_updateService'
      required:
      - actionType
      type: object
    CreateIssueCredentialRecordRequest_allOf:
      properties:
        issuingDID:
          description: The issuer DID of the verifiable credential object.
          example: did:prism:issuerofverifiablecredentials
          type: string
        connectionId:
          description: "The unique identifier of a DIDComm connection that already\
            \ exists between the issuer and the holder, and that will be used to execute\
            \ the issue credential protocol."
          type: string
      required:
      - connectionId
      - issuingDID
      type: object
      example: null
    IssueCredentialRecord_allOf:
      properties:
        recordId:
          description: The unique identifier of the issue credential record.
          type: string
        createdAt:
          description: The date and time when the issue credential record was created.
          format: date-time
          type: string
        updatedAt:
          description: The date and time when the issue credential record was last
            updated.
          format: date-time
          type: string
        role:
          description: The role played by the Prism agent in the credential issuance
            flow.
          enum:
          - Issuer
          - Holder
          type: string
        protocolState:
          description: The current state of the issue credential protocol execution.
          enum:
          - OfferPending
          - OfferSent
          - OfferReceived
          - RequestPending
          - RequestSent
          - RequestReceived
          - ProblemReportPending
          - ProblemReportSent
          - ProblemReportReceived
          - CredentialPending
          - CredentialSent
          - CredentialReceived
          type: string
        jwtCredential:
          description: The base64-encoded JWT verifiable credential that has been
            sent by the issuer.
          type: string
        issuingDID:
          description: Issuer DID of the verifiable credential object.
          example: did:prism:issuerofverifiablecredentials
          type: string
      required:
      - createdAt
      - protocolState
      - recordId
      - role
      type: object
      example: null
    Connection_allOf:
      properties:
        self:
          description: The reference to the connection resource.
          example: https://atala-prism-products.io/connections/ABCD-1234
          type: string
        kind:
          description: The type of object returned. In this case a `Connection`.
          example: Connection
          type: string
        connectionId:
          description: The unique identifier of the connection.
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          format: uuid
          type: string
        myDid:
          description: The DID representing me as the inviter or invitee in this specific
            connection.
          example: did:peer:12345
          type: string
        theirDid:
          description: The DID representing the other peer as the an inviter or invitee
            in this specific connection.
          example: did:peer:67890
          type: string
        state:
          description: The current state of the connection protocol execution.
          enum:
          - InvitationGenerated
          - InvitationReceived
          - ConnectionRequestPending
          - ConnectionRequestSent
          - ConnectionRequestReceived
          - ConnectionResponsePending
          - ConnectionResponseSent
          - ConnectionResponseReceived
          - ProblemReportPending
          - ProblemReportSent
          - ProblemReportReceived
          type: string
        createdAt:
          description: The date and time the connection record was created.
          example: 2021-10-31T09:22:23Z
          format: date-time
          type: string
        updatedAt:
          description: The date and time the connection record was last updated.
          example: 2021-12-31T13:59:59Z
          format: date-time
          type: string
        role:
          description: The role played by the Prism agent in the connection flow.
          enum:
          - Inviter
          - Invitee
          type: string
        invitation:
          $ref: '#/components/schemas/ConnectionInvitation'
      required:
      - connectionId
      - createdAt
      - invitation
      - kind
      - role
      - self
      - state
      type: object
      example: null
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: apikey
      type: apiKey
